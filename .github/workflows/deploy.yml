name: Build && Deploy on GitHub Pages

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install Dependencies
        run: |
          npm i
          npm cache verify

      - name: Build Project
        run: npm run build || exit 1

      - name: Remove old files
        run: |
          find . -mindepth 1 \( -name '.git' -o -name 'dist' \) -prune -o -exec rm -rf {} + || true

      - name: Copy files from dist to current directory
        run: |
          mv dist/* ./
          rm -rf dist

      - name: Deploy to Build Branch
        if: success()
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git fetch origin build || true
          git checkout -B build origin/build 2>/dev/null || git checkout -b build
          git add .
          git commit -m "Deploy: Build contents $(date '+%Y-%m-%d %H:%M:%S')"
          git push -f https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:build

      - name: Activate GitHub Pages
        run: |
          gh api -X POST /repos/${{ github.repository }}/pages --silent \
            -F source[branch]="build" \
            -F source[path]="/"

      - name: Set Website URL
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const pageUrl = `https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}`
              await github.rest.repos.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                homepage: pageUrl
              })
              console.log(`Successfully set homepage to: ${pageUrl}`)
            } catch (error) {
              console.error('Failed to set homepage:', error)
              process.exit(1)
            }

      - name: Set Repository Homepage
        run: |
          gh repo edit --homepage "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
